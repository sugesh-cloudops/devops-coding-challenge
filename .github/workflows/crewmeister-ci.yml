name: crewmeister-ci

on:
  push:
    branches:
      - main
      - feature/*

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install -DskipTests

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Code Quality Checks
        run: mvn verify

  docker:
    runs-on: ubuntu-latest
    needs: build  
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/feature/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/devops-coding-challenge:latest --push .

  updatek8s:
    runs-on: ubuntu-latest
    needs: docker  
    outputs:
      aws_access_key_id: ${{ steps.auth.outputs.aws_access_key_id }}
      aws_secret_access_key: ${{ steps.auth.outputs.aws_secret_access_key }}
      aws_session_token: ${{ steps.auth.outputs.aws_session_token }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        id: auth
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy Helm Chart 
        run: |
          helm install crewmeister-app ./helm/crewmeister-app \
    
